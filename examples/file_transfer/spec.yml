# Name of the spec
name: File transfer

# Description of the spec
description: Upload files to run on servers and download the results

################################################################################
# Experiments
################################################################################

# The default properties for each experiment
experiment_default:
  envs:
    LOCAL_DIR: examples/file_transfer

# The main experiments
experiments:

### Upload Experiments ###

- name: Upload experiment 1
  description: Upload simple script to a server
  envs:
    SCRIPT: remote_experiment1.sh
  requirements:
    run:
    - get_random_number: "<=1"
  commands:
    run:
    # Remove old scripts on remote
    - "remote:rm -f ~/remote_experiment1.sh"
    - "remote:rm -f ~/remote_experiment2.sh"
    # Copy script from local to remote
    - "local:scp $LOCAL_DIR/$SCRIPT $NOODLES_SERVER_AUTHORITY:~/$SCRIPT"

- name: Upload experiment 2
  description: Upload simple script to a server
  envs:
    SCRIPT: remote_experiment2.sh
  commands:
    run:
    # Remove old scripts on remote
    - "remote:rm -f ~/remote_experiment1.sh"
    - "remote:rm -f ~/remote_experiment2.sh"
    # Copy script from local to remote
    - "local:scp $LOCAL_DIR/$SCRIPT $NOODLES_SERVER_AUTHORITY:~/$SCRIPT"

### Run Experiments ###

- name: Run experiment 1
  description: Run the simple script on server
  envs:
    SCRIPT: remote_experiment1.sh
  depends_on:
    run:
    - Upload experiment 1
  requirements:
    run:
    - find_experiment: "==Yes"
  commands:
    run: "remote:bash -s < ~/$SCRIPT"

- name: Run experiment 2
  description: Run the simple script on server
  envs:
    SCRIPT: remote_experiment2.sh
  depends_on:
    run:
    - Upload experiment 2
  requirements:
    run:
    - find_experiment: "==Yes"
  commands:
    run: "remote:bash -s < ~/$SCRIPT"

### Download Experimental Results ###

- name: Download experimental result 1
  description: Download experimental result from the server
  envs:
    SCRIPT: remote_experiment1.sh
    LOG: exp1_result.log
  depends_on:
    run:
    - Run experiment 1
  requirements:
    run:
    - find_experiment: "==Yes"
  commands:
    run: "local:scp $NOODLES_SERVER_AUTHORITY:~/$LOG $LOCAL_DIR/$LOG"

- name: Download experimental result 2
  description: Download experimental result from the server
  envs:
    SCRIPT: remote_experiment2.sh
    LOG: exp2_result.log
  depends_on:
    run:
    - Run experiment 2
  requirements:
    run:
    - find_experiment: "==Yes"
  commands:
    run: "local:scp $NOODLES_SERVER_AUTHORITY:~/$LOG $LOCAL_DIR/$LOG"

################################################################################
# Servers
################################################################################

# The default properties for each server
server_default:
  # Path to the private key on local
  private_key_path: $HOME/.ssh/id_rsa
  # Username on the server (e.g., 'user1')
  username: $USER

# All servers
servers:
- name: Server 1
  # Hostname of the server (e.g., "server1.example.com", "123.123.123.123")
  hostname: server1
- name: Server 2
  # Hostname of the server (e.g., "server1.example.com", "123.123.123.123")
  hostname: server2

################################################################################
# Requirements
################################################################################

# Commands to run to check requirements on servers
requirements:
  # Get random number between integers 1 and 2 on server
  get_random_number: "echo $(( ( RANDOM % 2 )  + 1 ))"
  # Check whether the script file exists
  find_experiment: "[ -f $SCRIPT ] && echo -n Yes || echo -n No"

################################################################################
# Deployment
################################################################################

# The interval to run each deployment round
round_interval: 10
# The interval to deploy each experiment in each round
deployment_interval: 0
