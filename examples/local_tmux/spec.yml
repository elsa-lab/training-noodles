# Name of the spec
name: Two Tmux

# Description of the spec
description: Run two Tmux sessions with different delays on local machines

################################################################################
# Experiments
################################################################################

before_all_experiments:
  # These environment variables only apply to this stage (before all)
  envs:
    TMUX_PREFIX: test
  commands:
    # Kill short and long Tmux sessions before the main experiments start
    run:
    - |-
      tmux kill-ses -t "$TMUX_PREFIX/short_tmux" 2> /dev/null || true
    - |-
      tmux kill-ses -t "$TMUX_PREFIX/long_tmux" 2> /dev/null || true

before_each_experiment:
  # Specify common environment variables for all main experiments
  envs:
    TMUX_PREFIX: test
    OUTPUT: examples/local_tmux/output.log

each_experiment:
  commands:
    # Stop the Tmux session corresponding to the experiment
    stop: |-
      tmux kill-ses -t "$TMUX_PREFIX/$NAME" 2> /dev/null || true

# Main experiments go here
experiments:
- name: Short Tmux
  description: Run tmux session, delay for 10 seconds, and write current time to output
  # Specify environment variables only for this experiment
  envs:
    NAME: short_tmux
    SCRIPT: examples/local_tmux/script1.sh
    DELAY: 10
  commands:
    # Write the scripts into the file
    run:
    - |-
      echo "sleep $DELAY" > $SCRIPT
    - |-
      echo "echo $(date) > $OUTPUT" >> $SCRIPT
- name: Long Tmux
  description: After "Short Tmux" has finished, delay for 30 seconds, and delete the output produced by "Short Tmux"
  # Specify environment variables only for this experiment
  envs:
    NAME: long_tmux
    OTHER_NAME: short_tmux
    SCRIPT: examples/local_tmux/script2.sh
    DELAY: 30
  commands:
    # Write the scripts into the file
    run:
    - |-
      echo "sleep $DELAY" > $SCRIPT
    - |-
      echo "rm $OUTPUT" >> $SCRIPT
  requirements:
    # We require that the short Tmux session is not present when running this
    # experiment
    run:
      other_tmux_count: "==0"

after_each_experiment:
  commands:
    # This command would be appended after the commands in main experiments
    run: |-
      tmux new -d -s "$TMUX_PREFIX/$NAME" "bash -s < $SCRIPT"

################################################################################
# Servers
################################################################################

# All servers
servers:
- name: Localhost 1
  hostname: localhost

################################################################################
# Requirements
################################################################################

# Commands to run to check requirements on servers
requirements:
  # Count the number of lines of Tmux session list which contains the name
  # "test/short_tmux". If the output is 1, it means the short Tmux session is
  # still running, otherwise it would be 0
  other_tmux_count: "tmux ls 2>/dev/null | grep $TMUX_PREFIX/$OTHER_NAME | wc -l"

################################################################################
# Deployment
################################################################################

# The interval to run each deployment round
round_interval: 10
# The interval to deploy each experiment in each round
deployment_interval: 0
