# Name of the spec
name: Default spec

# Description of the spec
description: |-
  All default settings are in this spec. Properties in user specs would inherit
  from these settings if user doesn't specify them.

################################################################################
# Experiments
################################################################################

# Runs before the start of main experiments
before_all_experiments: []

# The default properties for each experiment
experiment_default:
  name: <default>
  envs: {}
  commands: {}
  requirements: {}

# The main experiments
experiments: []

# Runs after the main experiments have finished
after_all_experiments: []

################################################################################
# Servers
################################################################################

# The default properties for each server
server_default:
  # Path to the private key on local
  private_key_path: $HOME/.ssh/id_rsa
  # Port to connect
  port: 22
  # Username on the server (e.g., 'user1')
  username: $USER
  # Hostname of the server (e.g., 'example.com', '123.123.123.123')
  hostname: localhost

# All servers
servers: []

################################################################################
# Requirements
################################################################################

# Commands to run to check requirements on servers
requirements:
  # Get average CPU usage over 3 seconds (Output: Three floats between 0-100 (%)) (Reference: https://askubuntu.com/a/941997)
  # If there are multiple outputs in each line, Noodles would try to calculate the average
  cpu_usage:
  - "(grep 'cpu ' /proc/stat;sleep 0.1;grep 'cpu ' /proc/stat) | awk -v RS='' '{print ($13-$2+$15-$4)*100/($13-$2+$15-$4+$16-$5)}'"
  - "sleep 1.5"
  - "(grep 'cpu ' /proc/stat;sleep 0.1;grep 'cpu ' /proc/stat) | awk -v RS='' '{print ($13-$2+$15-$4)*100/($13-$2+$15-$4+$16-$5)}'"
  - "sleep 1.5"
  - "(grep 'cpu ' /proc/stat;sleep 0.1;grep 'cpu ' /proc/stat) | awk -v RS='' '{print ($13-$2+$15-$4)*100/($13-$2+$15-$4+$16-$5)}'"
  # Get memory usage (Output: A float between 0-100 (%)) (Reference: https://askubuntu.com/a/941997)
  memory_usage: awk '/MemTotal/{t=$2}/MemAvailable/{a=$2}END{print 100-100*a/t}' /proc/meminfo
  # Get disk usage (Output: A float between 0-100 (%)) (Reference: https://askubuntu.com/a/941997)
  disk_usage: df | awk '/ \/$/{print substr($5, 1, length($5)-1)}'
  # Get CUDA GPU utilization (Output: A float between 0-100 (%)) (Reference: https://gist.github.com/jonatw/9322244)
  cuda_gpu_utilization: nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits | awk '{s+=$1; n++} END {print s/n}'
  # Get CUDA memory utilization (Output: A float between 0-100 (%)) (Reference: https://gist.github.com/jonatw/9322244)
  cuda_memory_utilization: nvidia-smi --query-gpu=utilization.memory --format=csv,noheader,nounits | awk '{s+=$1; n++} END {print s/n}'

################################################################################
# Deployment
################################################################################

# The interval to run each deployment round
round_interval: 10
# The interval to deploy each experiment in each round
deployment_interval: 0

################################################################################
# Error Handling
################################################################################

# Whether to check any nonzero return code and nonempty stderr and raise error
check_any_errors: True

# List of error handlers
error_handlers: []
